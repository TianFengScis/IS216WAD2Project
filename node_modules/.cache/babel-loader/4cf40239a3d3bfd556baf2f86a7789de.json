{"remainingRequest":"/Users/tianfeng/Desktop/APP/IS216WAD2Project/node_modules/thread-loader/dist/cjs.js!/Users/tianfeng/Desktop/APP/IS216WAD2Project/node_modules/babel-loader/lib/index.js!/Users/tianfeng/Desktop/APP/IS216WAD2Project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tianfeng/Desktop/APP/IS216WAD2Project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tianfeng/Desktop/APP/IS216WAD2Project/src/views/Community.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tianfeng/Desktop/APP/IS216WAD2Project/src/views/Community.vue","mtime":1636870101419},{"path":"/Users/tianfeng/Desktop/APP/IS216WAD2Project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tianfeng/Desktop/APP/IS216WAD2Project/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tianfeng/Desktop/APP/IS216WAD2Project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tianfeng/Desktop/APP/IS216WAD2Project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tianfeng/Desktop/APP/IS216WAD2Project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Community.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div id=app class=\"container-fluid\">\r\n          <div class=\"row my-3\">\r\n              <!--api messages-->\r\n              <div id=\"joke\" class=\"col-12 text-light\" @click=\"newJoke\"><marquee behavior=\"scroll\" direction=\"left\">{{apiContent.joke}}<strong> (Click Me for New Jokes!)</strong></marquee></div>\r\n\r\n          </div>\r\n          \r\n          <div class=\"row text-center justify-content-md-center\">\r\n              <!--To do list-->\r\n              <div id=\"taskList\" class=\"col-xl-3 col-lg-3 order-lg-1 col-md-5 order-md-1\">\r\n                <div class=\"my-3\">\r\n                    <button class=\"button my-3\" @click=\"showModal = true\">New Task</button>\r\n                    <transition name=\"fade\" appear>\r\n                      <div class=\"modal-overlay\" v-if=\"showModal\" >\r\n                        <div class=\"popUp\">\r\n                            <h3>Add a New Task</h3>\r\n                            <hr>\r\n                            <div class=\"mb-4\">\r\n                              <label for=\"exampleFormControlInput1\" class=\"form-label\">Description</label>\r\n                              <input type=\"text\" id=\"\" class=\"form-control\" placeholder=\"Task Description\" v-model=\"newTaskItem.newTaskDesc\">\r\n                            </div>\r\n                            <div class=\"mb-4\">\r\n                              <label for=\"exampleFormControlInput1\" class=\"form-label\">Due Date</label>\r\n                              <input type=\"date\" id=\"\" class=\"form-control\" v-model=\"newTaskItem.newTaskDueDate\">\r\n                            </div>\r\n                            <div class=\"mb-4\">\r\n                              <label for=\"exampleFormControlInput1\" class=\"form-label\">Time (Optional)</label>\r\n                              <input type=\"time\" id=\"\" class=\"form-control\" v-model=\"newTaskItem.newTaskDueTime\">\r\n                            </div>\r\n                            <p v-if=\"newTaskError\" class=\"text-danger\">The please provide the task description and the duedate !</p>\r\n                            <hr>\r\n                            <button class=\"button mx-3\" @click=\"showModal = false; newTaskError =false\">Close</button>\r\n                            <button v-if=\"newTaskItem.newTaskDueDate != ''\" class=\"button mx-3\" @click=\"addNewTask\">Add Task</button>\r\n                            <button v-else class=\"button mx-3\" @click=\"showNewTaskError\">Add Task</button>\r\n                        </div>     \r\n                      </div>\r\n                    </transition>\r\n                </div>\r\n                <h3 class=\"text-light\">Your Task List</h3>\r\n                <hr class=\"border border-light\">\r\n                <div v-for=\"(task,key) in taskItem\" v-bind:key=\"task.taskId\" >\r\n                    <div id =\"tasks\" class=\"card mx-auto\" style=\"max-width: 75%;\">\r\n                        <div class=\"card-body text-secondary\">\r\n                          <p class=\"card-text\" >{{task.taskDesc}}</p>\r\n                          <p class=\"card-text\" >{{task.taskDue}}</p>\r\n                          <p v-if=\"task.taskTime != ''\">{{task.taskTime}}</p>\r\n                          <button type=\"button\" class=\"btn btn-success\" @click=\"removeTask(key)\">Completed</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                  \r\n              </div>\r\n\r\n              <!--Community Post-->\r\n              <div class=\"col-xl-6 col-lg-5 order-lg-2 col-md-6 order-md-3\">\r\n                <h1 class=\"text-light\">SCIS Reddit Community</h1>\r\n                <div class=\"bg-white p-3 rounded-3 bg-opacity-75\">\r\n                  <div class=\"form-group text-start mt-3\">\r\n                    <label for=\"exampleInputEmail1\">Share your thoughts</label>\r\n                    <textarea type=\"text\" class=\"form-control mt-1\" v-model=\"postMessage\" placeholder=\"Type here...\"></textarea>\r\n                    <img class=\"my-2\" style=\"dispay:none\" id=\"myimg\" src=\"\" alt=\"\">\r\n\r\n                    <button type=\"button\" class=\"btn btn-secondary mt-2\" @click=\"selectImg\">Upload Photo</button>\r\n                    <button v-if=\"photoPath\" type=\"button\" class=\"btn btn-secondary mx-2 mt-2\" @click=\"removePhoto\">Remove Photo</button>\r\n                    <input type=\"file\" id=\"hiddenSelectImg\" style=\"display:none\">\r\n                    <br>\r\n                    <small>Note: Photo file size must be smaller than 2mb !!!</small>\r\n                  </div>\r\n                  <hr>\r\n                  <p v-if=\"noPublishContent\"><small class=\"text-danger\">Please share your thoughts...</small></p>\r\n                  <button v-if=\"postMessage.trim()==''\" class=\"button \" @click=\"noPublishContent = true\">Publish</button>\r\n                  <button v-else class=\"button \" @click=\"publishPost();noPublishContent =false\">Publish</button>\r\n                 \r\n                </div>\r\n                \r\n                <div v-if=\"allPost != []\" class=\"card mb-3 rounded-5\">\r\n                  <div v-for=\"(post,key) in allPost\" v-bind:key=\"key\" class=\"bg-white p-3 rounded-3 my-2 bg-opacity-75\">\r\n                    <div class=\"card-body text-start\">\r\n                      <h5 v-if=\"post.email != user.email\" class=\"card-title\">\r\n                      <img :src=\"post.profilePic\" class=\"rounded-circle mr-1\" alt=\"Chris Wood\" width=\"40\" height=\"40\">{{post.username}}</h5>\r\n                      <h5 v-else class=\"card-title\"><img :src=\"user.profilePic\" class=\"rounded-circle mr-1\" alt=\"Chris Wood\" width=\"40\" height=\"40\">My post</h5>\r\n                      <img v-if=\"post.downloadUrl != ''\" :src=\"post.downloadUrl\" class=\"card-img-top mb-3\" alt=\"...\">\r\n                      <p class=\"card-text\">{{post.postMessage}}</p>\r\n                      <p class=\"card-text\"><small class=\"text-muted\">Published on: {{post.date.toString()}}</small></p>\r\n                      <ul v-for=\"(comment,ckey) in post.comments\"  v-bind:key=\"ckey\" class=\"list-group\">\r\n                        <li class=\"list-group-item\">{{comment}}</li>\r\n                      </ul>   \r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Your Comment...\" v-model=\"newComment\">\r\n                      <div class=\"input-group-append\">\r\n                        <button v-if=\"newComment.trim() != ''\" class=\"btn btn-outline-secondary\" type=\"button\" @click=\"processComment(key)\">Comment</button>\r\n                        <button v-else class=\"btn btn-outline-secondary\" type=\"button\" disabled>Comment</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!--Friend List-->\r\n              <div id=\"friendlisthide\" class=\"col-xl-3 col-lg-4 order-lg-3 col-md-5 order-md-2\">\r\n              <div class=\"container d-flex justify-content-center align-items-center\">\r\n                  <div class=\"card bg-white bg-opacity-75 px-5 py-2 mx-2 w-100\">\r\n                      <div class=\"text-center\">\r\n                          <h4 v-if=\"user != null\" class=\"my-1\">\r\n                            <img :src=\"user.profilePic\" class=\"rounded-circle mr-1\" alt=\"Chris Wood\" width=\"40\" height=\"40\"> {{user.username}}</h4>\r\n                          <button class=\"button p-2\" @click=\"showProfile=true\">Profile</button>\r\n                          <div class=\"justify-content-between align-items-center mt-4 px-4 w-100\">\r\n                              <div>\r\n                                  <h6>Tasks: {{taskItem.length}}</h6>\r\n                                  <h6>Friends: {{myFriends.length}} Request: {{myFriendRequest.length}}</h6>\r\n                              </div>\r\n                        </div>\r\n                        <transition name=\"fade\" appear>\r\n                              <div class=\"modal-overlay\" v-if=\"showProfile\" >\r\n                                <div class=\"popUp\">\r\n                                  <div class=\"card-header\">\r\n                                    Profile\r\n                                  </div>\r\n                                  <div v-if=\"edit == false\" class=\"card-body\">\r\n                                       <h5 class=\"card-title\">{{user.email}}</h5>\r\n                                      <p class=\"card-text\">{{user.username}}</p>\r\n                                  </div>\r\n                                  <div v-else class=\"card-body\">\r\n                                       <h5 class=\"card-title\">{{user.email}}</h5>\r\n                                       <hr>\r\n                                       Username :\r\n                                      <input class=\"card-text mb-2\" v-model=\"newUsername\"><br>\r\n                                      <span v-if=\"newUsernameError\" class=\"text-danger\">Invalid username</span>\r\n                                      <p>Profile Picture</p>\r\n                                      <img v-for=\"(url,key) in photoLink\" v-bind:key=\"key\" :src=\"url\" class=\"editProfile rounded-circle mx-1 mt-0\" alt=\"Chris Wood\" width=\"40\" height=\"40\"\r\n                                      @click=\"selectedImg = url\"><br>\r\n                                      <div v-if=\"selectedImg != ''\">\r\n                                        <h5>New Profile Picture</h5><img :src=\"selectedImg\" class=\"rounded-circle my-1\" alt=\"Chris Wood\" width=\"40\" height=\"40\">\r\n                                      </div>\r\n                                      <button type=\"button\" class=\"btn btn-primary\" @click=\"updateUsername\">Update</button>\r\n                                      <hr>\r\n                                      Change Password (Optional)\r\n                                      <br>\r\n                                      <input class=\"my-2\" type=\"password\" v-model=\"oldPw\" placeholder=\"Old Password\">\r\n                                      <input class=\"mb-2\" type=\"password\" v-model=\"newPw\" placeholder=\"New Password\"><br>\r\n                                      <span v-if=\"updatePasswordError\" class=\"text-danger\">Wrong Password</span><br>\r\n                                      <button type=\"button\" class=\"btn btn-primary\" @click=\"changePassword\">Change Password</button>\r\n                                  </div>\r\n                                  \r\n                                  <hr>\r\n                                  <button class=\"button px-4 mx-4\" @click=\"edit=true\">Edit</button>\r\n                                  <button class=\"button px-4 mx-4\" @click=\"showProfile=false;newUsernameError=false;updatePasswordError=false\">Close</button>\r\n                                </div>     \r\n                              </div>\r\n                        </transition>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n                <h3 class=\"text-light fw-bold\">Friends</h3>\r\n                <hr class=\"border border-light\">\r\n                <ul v-if=\"myFriends.length !=0\" class=\"list-group\">\r\n                    <li v-for=\"(friend,key) in myFriends\" class=\"list-group-item list-group-item-info text-start\" id=\"listfriend\" v-bind:key=\"key\" @click=\"showFriendInfo=true;getFriendInfo(friend)\">\r\n                      <img :src=\"friend.profilePic\" class=\"rounded-circle mr-1\" alt=\"Chris Wood\" width=\"40\" height=\"40\">\r\n                        {{friend.username}}</li>\r\n                </ul>\r\n                <p v-else class=\"text-light\">Add your first friend!</p>\r\n                 <transition name=\"fade\" appear>\r\n                      <div class=\"modal-overlay\" v-if=\"showFriendInfo\" >\r\n                        <div class=\"popUp\">\r\n                          <div class=\"card-header\">\r\n                            Friend Info\r\n                          </div>\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">{{friendInfo.username}}</h5>\r\n                            <p class=\"card-text\">{{friendInfo.email}}</p>\r\n                            <button type=\"button\" class=\"btn btn-primary m-1\" @click=\"toMessage\">Message</button>\r\n                            <button type=\"button\" class=\"btn btn-outline-danger m-1\" @click=\"deleteFriend(friendInfo);friendInfo=null;showFriendInfo=false\" >Delete</button>\r\n                          </div>\r\n                          \r\n                          <hr >\r\n                            <button class=\"button mx-3\" @click=\"showFriendInfo = false;\">Close</button>\r\n                        </div>     \r\n                      </div>\r\n                </transition>\r\n                <hr class=\"border border-light\">\r\n                <p class=\"text-light fw-bold\">Friend Request</p>\r\n                <ul v-if=\"myFriendRequest.length != 0\" class=\"list-group\">\r\n                    <li v-for=\"(request,key) in myFriendRequest\" class=\"list-group-item list-group-item-info\" v-bind:key=\"key\">{{request.username}}\r\n                      <br>\r\n                      <button type=\"button\" class=\"btn btn-outline-danger m-1\" @click=\"processFriendRequest(request,key,false)\">Reject</button>\r\n                      <button type=\"button\" class=\"btn btn-outline-success m-1\" @click=\"processFriendRequest(request,key,true)\">Accept</button>\r\n                    </li>\r\n                </ul>\r\n                <p v-else class=\"text-light\">No request...</p>\r\n                <hr class=\"border border-light\">\r\n                <button class=\"button my-3\" @click=\"showSearchFriend=true\">New Friend</button>\r\n                <transition name=\"fade\" appear>\r\n                      <div class=\"modal-overlay\" v-if=\"showSearchFriend\" >\r\n                        <div class=\"popUp\">\r\n                            <h3 class=\"text-dark\">Search for a Friend</h3>\r\n                            <hr>\r\n                            <div class=\"input-group mb-3\">\r\n                              <input type=\"text\" class=\"form-control\" placeholder=\"Enter an email\" v-model=\"searchEmail\">\r\n                              <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" @click=\"findUser\">Search</button>\r\n                            </div>\r\n                            \r\n                            <div v-if=\"searchUser != null && searchUser !=false\" class=\"card\">\r\n                              <hr>\r\n                                <div class=\"card-header\">\r\n                                  Result\r\n                                </div>\r\n                                <div class=\"card-body\">\r\n                                  <h5 class=\"card-title\">{{searchUser.username}}</h5>\r\n                                  <p class=\"card-text\">{{searchUser.email}}</p>\r\n                                  <button v-if=\"searchUser.email == user.email\" class=\"button mx-3\" disabled>Yourself</button>\r\n                                  <button v-else-if=\"(myFriends.filter((item,key)=>item.email == searchUser.email)).length != 0\" class=\"btn btn-outline-danger m-3\" @click=\"deleteFriend(searchUser)\">Delete Friend</button>\r\n                                  <button v-else class=\"button mx-3\" @click=\"sendFriendRequest\">Add Friend</button>\r\n                                </div>\r\n                            </div>\r\n                            <p v-if=\"searchUser ==false\">No such user...</p>\r\n                            <hr>\r\n                            <button class=\"button mx-3\" @click=\"showSearchFriend = false; searchUser=null; searchEmail=''\">Close</button>\r\n                        </div>     \r\n                      </div>\r\n                </transition>\r\n              </div>\r\n          </div>\r\n      </div>\r\n</template>\r\n<script>\r\n// <template>\r\n//   <div id=\"app\">\r\n//     <div id=\"nav\">\r\n//       <router-link to=\"/\">Home</router-link> |\r\n//       <router-link to=\"/about\">About</router-link>\r\n//     </div>\r\n//     <router-view/>\r\n//   </div>\r\n// </template>\r\n//<HelloWorld msg=\"Welcome to Your Vue.js App\"/>\r\n//import HelloWorld from './components/HelloWorld.vue'\r\nimport { getAuth , onAuthStateChanged, signInWithEmailAndPassword,updatePassword} from \"firebase/auth\";\r\nimport { getDocs ,getFirestore ,collection, setDoc ,doc,onSnapshot} from \"firebase/firestore\"; \r\nimport {getStorage , ref, uploadBytes, getDownloadURL} from \"firebase/storage\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: 'app',\r\n  data(){\r\n    return {\r\n      taskItem:[\r\n          // {\r\n          //   taskId : 1,\r\n          //   taskDesc: \"This is task 1\",\r\n          //   taskDue: \"11/8/2021\",\r\n          //   taskTime: \"\"\r\n          // },\r\n          // {\r\n          //   taskId : 2,\r\n          //   taskDesc: \"This is task 2\",\r\n          //   taskDue: \"11/8/2021\",\r\n          //   taskTime: \"\"\r\n          // }\r\n      ],\r\n      newTaskItem:{\r\n\r\n        newTaskDesc : \"\",\r\n        newTaskDueDate : \"\",\r\n        newTaskDueTime : \"\",\r\n        \r\n      },\r\n      //modals \r\n      showModal : false, //for new task\r\n      showSearchFriend : false,\r\n      showFriendInfo: false,\r\n      showProfile :false,\r\n\r\n      //search\r\n      searchEmail : \"\",\r\n      searchUser : null,\r\n\r\n      //errors\r\n      newTaskError: false,\r\n\r\n      //friends\r\n      myFriends: [],\r\n      myFriendRequest :[],\r\n      friendInfo : null,\r\n      photoLink : [\r\n      \"https://bootdey.com/img/Content/avatar/avatar1.png\",\r\n      \"https://bootdey.com/img/Content/avatar/avatar2.png\",\r\n      \"https://bootdey.com/img/Content/avatar/avatar3.png\",\r\n      \"https://bootdey.com/img/Content/avatar/avatar4.png\",\r\n      \"https://bootdey.com/img/Content/avatar/avatar5.png\",\r\n      \"https://bootdey.com/img/Content/avatar/avatar6.png\",\r\n      \"https://bootdey.com/img/Content/avatar/avatar7.png\",\r\n      \"https://bootdey.com/img/Content/avatar/avatar8.png\"\r\n      ],\r\n      //currentUser\r\n      user : null,\r\n\r\n      //community post\r\n      photoPath : null,\r\n      postMessage : \"\",\r\n      allPost : [],\r\n      myPost: 0,\r\n      pictUrl : \"\",\r\n      noPublishContent: false,\r\n      //Comment\r\n      newComment : \"\",\r\n\r\n      //changePassword\r\n      edit : false,\r\n      saveBtn : false,\r\n      oldPw : \"\",\r\n      newPw : \"\",\r\n      newUsername : \"\",\r\n      newUsernameError : false,\r\n      updatePasswordError : false,\r\n      selectedImg : \"\",\r\n\r\n      //api content\r\n      apiContent : \"\"\r\n    }\r\n  },\r\n  components: {\r\n    //HelloWorld,\r\n  },\r\n  methods:{\r\n    addNewTask(){\r\n      console.log(this.newTaskItem)\r\n      var item = {\r\n            //taskId : this.taskItem.length + 1,\r\n            taskDesc: this.newTaskItem.newTaskDesc,\r\n            taskDue: this.newTaskItem.newTaskDueDate,\r\n            taskTime: this.newTaskItem.newTaskDueTime\r\n      }\r\n\r\n      this.taskItem.push(item)\r\n      this.showModal = false;\r\n\r\n      //update the database\r\n      var updatedItem = Object.assign({}, this.taskItem);\r\n      //console.log(updatedItem);\r\n      var promise = updateDbTaskItem(this.userUid,updatedItem);\r\n      promise.then(()=>{\r\n        console.log(\"Success\");\r\n        this.newTaskItem.newTaskDesc = \"\";\r\n        this.newTaskItem.newTaskDueDate = \"\";\r\n        this.newTaskItem.newTaskDueTime = \"\";\r\n        this.newTaskError = false;\r\n      })\r\n      \r\n    },\r\n    removeTask(id){\r\n      this.taskItem = this.taskItem.filter((item,key)=>key != id);\r\n            //update the database\r\n      var updatedItem = Object.assign({}, this.taskItem);\r\n      //console.log(updatedItem);\r\n      var promise = updateDbTaskItem(this.userUid,updatedItem);\r\n      promise.then(()=>{\r\n        console.log(\"Success\");\r\n        this.newTaskItem.newTaskDesc = \"\";\r\n        this.newTaskItem.newTaskDueDate = \"\";\r\n        this.newTaskItem.newTaskDueTime = \"\";\r\n        this.newTaskError = false;\r\n      })\r\n    },\r\n    showNewTaskError(){\r\n      this.newTaskError = true;\r\n    },\r\n    findUser(){\r\n      console.log(this.searchEmail);\r\n      var userInfo = getSearchUser(this.searchEmail);\r\n      userInfo.then((user)=>{\r\n        if(user){\r\n          this.searchUser = user;\r\n        }else{\r\n          this.searchUser = false;\r\n        }\r\n        \r\n      });\r\n    },\r\n    sendFriendRequest(){\r\n      // console.log(this.searchUser);\r\n      // console.log(this.user)\r\n      var updatedRequest = [];\r\n      var allRequest = getData(this.searchUser.uid,\"friendrequest\");\r\n        allRequest.then((result)=>{\r\n          if(result != null){\r\n            if(result.length != 0){\r\n              result = Object.values(result);\r\n              console.log(result);\r\n              for(let item of result){\r\n                //console.log(item)\r\n                var temp = {\r\n                  uid : item.uid,\r\n                  email : item.email,\r\n                  username : item.username\r\n                }\r\n                updatedRequest.push(temp);\r\n              }\r\n              updatedRequest.push(this.user);\r\n            }else{\r\n              updatedRequest.push(this.user);\r\n              console.log(\"No request\")\r\n            } \r\n          }else{\r\n            updatedRequest.push(this.user);\r\n            console.log(\"No request list\");\r\n          }\r\n          var response = sendDbFriendRequest(updatedRequest,this.searchUser);\r\n          response.then(()=>{\r\n              console.log(\"friend request send\");\r\n          });\r\n        }); \r\n\r\n    },\r\n    processFriendRequest(friend,id,action){\r\n      //action true -> accept\r\n      //action false -> reject\r\n      this.myFriendRequest = this.myFriendRequest.filter((request,key)=>key != id);\r\n\r\n      //update the database\r\n      //var updateRequest = Object.assign({},this.myFriendRequest);\r\n      var promise = sendDbFriendRequest(this.myFriendRequest,this.user);\r\n      promise.then(()=>{\r\n        if(action == true){\r\n          console.log(\"Friend Request accepted !\");\r\n          this.myFriends.push(friend);\r\n\r\n          //update database friend list for current user\r\n          var items = updateDbFriends(this.user.uid,this.myFriends);\r\n          items.then(()=>{\r\n            console.log(\"Friend list updated!\");\r\n          });\r\n          //update database friend list for friend\r\n          var updatedFriendListItems =[];\r\n          var friendListItems = getData(friend.uid,\"friends\");\r\n          friendListItems.then((result)=>{\r\n          if(result != null){\r\n            if(result.length != 0){\r\n              result = Object.values(result);\r\n              //console.log(result);\r\n              for(let item of result){\r\n                //console.log(item)\r\n                var temp = {\r\n                  uid : item.uid,\r\n                  email : item.email,\r\n                  username : item.username,\r\n                  profilePic : item.profilePic\r\n                }\r\n                updatedFriendListItems.push(temp);\r\n              }\r\n              updatedFriendListItems.push(this.user)\r\n            }else{\r\n              updatedFriendListItems.push(this.user)\r\n              console.log(\"No Friends\")\r\n            }\r\n            \r\n          }else{\r\n            updatedFriendListItems.push(this.user)\r\n            console.log(\"No Friendlist\");\r\n          }\r\n          items = updateDbFriends(friend.uid,updatedFriendListItems);\r\n          items.then(()=>{\r\n            console.log(\"Friend list updated!\");\r\n          });\r\n        }); \r\n\r\n        }else{\r\n          console.log(\"Friend Request rejected !\");\r\n        }\r\n      });\r\n    },\r\n    deleteFriend(unfriend){\r\n      this.myFriends = this.myFriends.filter((friend)=>friend.email != unfriend.email);\r\n\r\n      //delete for current user\r\n      var promise = updateDbFriends(this.user.uid,this.myFriends);\r\n      promise.then(()=>{\r\n        console.log(\"Friend list updated!\");\r\n\r\n          //get target unfriend\r\n          var updatedFriendListItems =[];\r\n          var friendListItems = getData(unfriend.uid,\"friends\");\r\n          friendListItems.then((result)=>{\r\n          if(result != null){\r\n            if(result.length != 0){\r\n              result = Object.values(result);\r\n              //console.log(result);\r\n              for(let item of result){\r\n                //console.log(item)\r\n                if(item.email != this.user.email){\r\n                  var temp = {\r\n                    uid : item.uid,\r\n                    email : item.email,\r\n                    username : item.username\r\n                  }\r\n                  updatedFriendListItems.push(temp);\r\n                }\r\n              }\r\n            }\r\n          }\r\n          var items = updateDbFriends(unfriend.uid,updatedFriendListItems);\r\n          items.then(()=>{\r\n            console.log(\"Friend list updated!\");\r\n          });\r\n        });\r\n      });\r\n    },\r\n    getFriendInfo(friend){\r\n        this.friendInfo = friend;\r\n    },\r\n    selectImg(){\r\n      // var ImgName, ImgUrl;\r\n    \r\n      // var reader = new FileReader();\r\n      var input = document.getElementById(\"hiddenSelectImg\");\r\n      \r\n      input.onchange = e =>{\r\n        var files = e.target.files;\r\n        var reader = new FileReader();\r\n        reader.onload = function(){\r\n          document.getElementById(\"myimg\").src = reader.result;\r\n          document.getElementById(\"myimg\").style = \"display:block;height:100px;width:100px; border:1px solid black\";\r\n        }\r\n        //console.log(files[0].name);\r\n        this.photoPath = files[0];\r\n        reader.readAsDataURL(files[0]);\r\n      }\r\n      input.click();\r\n    },\r\n    publishPost(){\r\n\r\n      var downloadUrl = \"\";\r\n      var storage = getStorage();\r\n      if(this.photoPath != null){\r\n        \r\n        downloadUrl = \"images/\"+this.photoPath.name;\r\n        var photoRef = ref(storage,downloadUrl);\r\n        \r\n        uploadBytes(photoRef,this.photoPath).then((snapshot)=>{\r\n          console.log(snapshot);\r\n        });\r\n\r\n      }\r\n      var getUrl = getDownloadURL(ref(storage,downloadUrl));\r\n      getUrl.then((url)=>{\r\n          var newPost = {\r\n          downloadUrl : url,\r\n          postMessage : this.postMessage,\r\n          uid : this.user.uid,\r\n          email : this.user.email,\r\n          username : this.user.username,\r\n          date : new Date().toDateString(),\r\n          comments : [],\r\n          profilePic : this.user.profilePic\r\n        }\r\n        this.processPublish(newPost);\r\n      }).catch(()=>{\r\n          var newPost = {\r\n          downloadUrl : \"\",\r\n          postMessage : this.postMessage,\r\n          uid : this.user.uid,\r\n          email : this.user.email,\r\n          username : this.user.username,\r\n          date : new Date().toDateString(),\r\n          comments : [],\r\n          profilePic : this.user.profilePic\r\n        }\r\n        this.processPublish(newPost);\r\n      });     \r\n    },\r\n    removePhoto(){\r\n      this.photoPath = null;\r\n      this.pictUrl = \"\";\r\n      document.getElementById(\"myimg\").src = \"\";\r\n      document.getElementById(\"myimg\").style = \"display:none;\";\r\n    },\r\n    processPublish(newPost){\r\n      var updatePost = []\r\n      var items = getData(\"allpost\",\"post\");\r\n      items.then((result)=>{\r\n          if(result != null){\r\n            if(result.length != 0){\r\n              result = Object.values(result);\r\n              //console.log(result);\r\n              for(let item of result){\r\n                //console.log(item)\r\n                var temp = {\r\n                  downloadUrl : item.downloadUrl,\r\n                  postMessage : item.postMessage,\r\n                  uid : item.uid,\r\n                  email : item.email,\r\n                  username : item.username,\r\n                  date : item.date,\r\n                  profilePic : item.profilePic\r\n                }\r\n                updatePost.push(temp);\r\n              }\r\n            }else{\r\n              console.log(\"No Friends\")\r\n            }\r\n            \r\n          }else{\r\n            console.log(\"No Friendlist\");\r\n          }\r\n          updatePost.push(newPost);\r\n          var promise = updateDbPost(updatePost);\r\n          promise.then(()=>{\r\n            console.log(\"Post Updated\");\r\n          })\r\n      }); \r\n      this.photoPath = null;\r\n      this.postMessage  = \"\";\r\n      this.pictUrl = \"\";\r\n      //this.allPost.unshift(newPost);\r\n      document.getElementById(\"myimg\").src = \"\";\r\n      document.getElementById(\"myimg\").style = \"display:none;\";\r\n    },\r\n    processComment(key){\r\n      this.allPost[key].comments.push(this.newComment);\r\n      var temp = this.allPost;\r\n      updateDbPost(temp).then(()=>{\r\n        console.log(\"Comment updated\");\r\n      });\r\n      this.newComment = \"\";\r\n    },\r\n    updateUsername(){\r\n      this.newUsernameError = false;\r\n      var db = getFirestore();\r\n      var userRef = doc(db,\"users\",this.user.uid);\r\n\r\n      if(this.newUsername.trim()==\"\"){\r\n        if(this.selectedImg != \"\"){\r\n            setDoc(userRef,{profilePic:this.selectedImg},{merge:true}).then(()=>{\r\n            console.log(\"Username updated\");\r\n            this.user.profilePic = this.selectedImg;\r\n            this.selectedImg = \"\";\r\n            this.showProfile = false;\r\n          });\r\n          return;\r\n        }\r\n        this.newUsernameError = true;\r\n        return;\r\n      }\r\n\r\n\r\n        setDoc(userRef,{username:this.newUsername},{merge:true}).then(()=>{\r\n        console.log(\"Username updated\");\r\n        this.user.username = this.newUsername;\r\n        this.newUsername = \"\";\r\n        this.showProfile = false;\r\n      });\r\n\r\n    },\r\n    changePassword(){\r\n      var auth = getAuth();\r\n      signInWithEmailAndPassword(auth,this.user.email,this.oldPw).then(()=>{\r\n          //correct password\r\n          var user = auth.currentUser;\r\n          updatePassword(user,this.newPw).then(()=>{\r\n            console.log(\"Password updated\");\r\n            this.newPw = \"\";\r\n            this.oldPw = \"\";\r\n          });\r\n      }).catch(()=>{\r\n          this.updatePasswordError = true;\r\n          this.newPw = \"\";\r\n          this.oldPw = \"\";\r\n      })\r\n    },\r\n    toMessage(){\r\n        window.location.href = \"Messages\";\r\n    },\r\n    newJoke(){\r\n      axios.get(\"https://geek-jokes.sameerkumar.website/api?format=json\")\r\n      .then(resp=>{\r\n        this.apiContent = resp.data\r\n      }).catch(e=>{\r\n        this.apiContent = e;\r\n      });\r\n    }\r\n  },\r\n  beforeCreate(){\r\n    const auth = getAuth();\r\n    onAuthStateChanged(auth, (user) => {\r\n    if (user) {\r\n        // User is signed in, see docs for a list of available properties\r\n        // https://firebase.google.com/docs/reference/js/firebase.User\r\n        //console.log(user.email);\r\n        var userInfo = getSearchUser(user.email);\r\n        userInfo.then((user)=>{\r\n          this.user=user;\r\n        });\r\n        this.userUid = user.uid; //log the uid in vue\r\n\r\n        //Start getting tasklist\r\n        var items = getData(this.userUid,\"tasklist\"); \r\n        items.then((result)=>{ //handles the promise\r\n          //console.log(result);\r\n          if(result != null){\r\n            if(result.length !=0){\r\n              result = Object.values(result);\r\n              //console.log(result);\r\n              for(let item of result){\r\n              //console.log(item);\r\n              var temp = {\r\n                taskDesc: item.taskDesc,\r\n                taskDue: item.taskDue,\r\n                taskTime: item.taskTime\r\n              }\r\n              this.taskItem.push(temp); // push the item into vue data\r\n            }\r\n            }else{\r\n              console.log(\"No Item\")\r\n            }\r\n          }else{\r\n            console.log(\"no task yet\");\r\n          }\r\n\r\n         });//end get tasklist items\r\n\r\n         //start getting friend list\r\n        // items = getData(user.uid,\"friends\");\r\n        // items.then((result)=>{\r\n        //   if(result != null){\r\n        //     if(result.length != 0){\r\n        //       result = Object.values(result);\r\n        //       //console.log(result);\r\n        //       for(let item of result){\r\n        //         //console.log(item)\r\n        //         getSearchUser(item.email).then((user)=>{\r\n        //             var temp = {\r\n        //             uid : user.uid,\r\n        //             email : user.email,\r\n        //             username : user.username,\r\n        //             profilePic : user.profilePic\r\n        //             }\r\n        //             console.log(\"Updating friend list\")\r\n        //             this.myFriends.push(temp);\r\n        //         });\r\n        //       }\r\n        //     }else{\r\n        //       console.log(\"No Friends\")\r\n        //     }\r\n            \r\n        //   }else{\r\n        //     console.log(\"No Friendlist\");\r\n        //   }\r\n        // }); //end getting friend list\r\n        \r\n        //start getting friend request\r\n        // items = getData(this.userUid,\"friendrequest\");\r\n        // items.then((result)=>{\r\n        //   if(result != null){\r\n        //     if(result.length != 0){\r\n        //       result = Object.values(result);\r\n        //       //console.log(result);\r\n        //       for(let item of result){\r\n        //         //console.log(item)\r\n        //         getSearchUser(item.email).then((user)=>{\r\n        //             var temp = {\r\n        //             uid : user.uid,\r\n        //             email : user.email,\r\n        //             username : user.username,\r\n        //             profilePic : user.profilePic\r\n        //             }\r\n        //             this.myFriendRequest.push(temp);\r\n        //         });\r\n\r\n        //       }\r\n        //     }else{\r\n        //       console.log(\"No Request\")\r\n        //     }\r\n            \r\n        //   }else{\r\n        //     console.log(\"No request list\");\r\n        //   }\r\n        // });\r\n        //start getting all post\r\n        items = getData(\"allpost\",\"post\");\r\n        items.then((result)=>{\r\n          if(result != null){\r\n            if(result.length != 0){\r\n              result = Object.values(result);\r\n              //console.log(result);\r\n              for(let item of result){\r\n                //console.log(item)\r\n                var comment = [];\r\n                if(item.comments != null){\r\n                    comment = Object.values(item.comments);\r\n                }\r\n                var temp = {\r\n                  downloadUrl : item.downloadUrl,\r\n                  postMessage : item.postMessage,\r\n                  uid : item.uid,\r\n                  email : item.email,\r\n                  username : item.username,\r\n                  date : item.date,\r\n                  comments : comment,\r\n                  profilePic:item.profilePic\r\n                }\r\n                this.allPost.unshift(temp);\r\n\r\n              }\r\n            }else{\r\n              console.log(\"No Post\")\r\n            }\r\n            \r\n          }else{\r\n            console.log(\"No post list\");\r\n          }\r\n        });\r\n        // ...\r\n        //real time lsiten to friends list\r\n        var db = getFirestore();\r\n        onSnapshot(doc(db, \"friends\",user.uid),(doc)=>{\r\n            //console.log(\"Current Data: \",doc.data());\r\n            if(doc.data()){\r\n                this.myFriends = [];\r\n                var temp = doc.data().myFriends\r\n                for(let f of temp){\r\n                  getSearchUser(f.email).then((user)=>{\r\n                      this.myFriends.push(user)\r\n                  });\r\n                }\r\n            }\r\n        });\r\n        //real time listen to friendrequest \r\n        onSnapshot(doc(db, \"friendrequest\",user.uid),(doc)=>{\r\n            //console.log(\"Current Data: \",doc.data());\r\n            if(doc.data()){\r\n                this.myFriendRequest = [];\r\n                var temp = doc.data().request\r\n                for(let f of temp){\r\n                  getSearchUser(f.email).then((user)=>{\r\n                      this.myFriendRequest.push(user)\r\n                  });\r\n                }\r\n            \r\n            }\r\n        });\r\n        //real time listen to post\r\n        onSnapshot(doc(db, \"post\",\"allpost\"),(doc)=>{\r\n            //console.log(\"Current Data: \",doc.data());\r\n            if(doc.data().allPostItems.length !=0){\r\n                if(this.allPost.length != doc.data().allPostItems.length){\r\n                  var temp = doc.data().allPostItems.pop()\r\n                  this.allPost.unshift(temp);\r\n                }else{\r\n                  this.allPost = doc.data().allPostItems;\r\n                }\r\n            }\r\n        });\r\n        document.getElementById(\"joke\").click()\r\n    }else{\r\n      console.log(\"No user\");\r\n      window.location.href=\"Login\";\r\n    }\r\n    });\r\n  },\r\n}\r\nasync function getSearchUser(email){\r\n    var db = getFirestore();\r\n    var user\r\n    const querySnapshot = await getDocs(collection(db, \"users\"));\r\n    querySnapshot.forEach((doc) => {\r\n    //console.log(`${doc.id} => ${doc.data().email}`);\r\n    if(doc.data().email == email){\r\n      //console.log(doc.id);\r\n      user = {\r\n        uid : doc.id,\r\n        email : doc.data().email,\r\n        username : doc.data().username,\r\n        profilePic : doc.data().profilePic\r\n      }\r\n      //console.log(temp);\r\n      \r\n    }\r\n});\r\n    return user;\r\n}\r\nasync function  getData(uid,source){\r\n    //get all task that a uid have and return an array of taskitem objects\r\n    //if user yet to have any task, null will be returned \r\n    var db = getFirestore();\r\n    var result = null;\r\n    const querySnapshot = await getDocs(collection(db, source));\r\n    querySnapshot.forEach((doc) => {\r\n    //console.log(doc.data());\r\n    if(doc.id == uid){\r\n        result = doc.data();\r\n        //console.log(result);\r\n    }\r\n\r\n    });\r\n    if(result != null && Object.values(result).length != 0){\r\n      if(source == \"tasklist\"){\r\n        return Object.values(result.taskItem);\r\n      }else if(source == \"friends\"){\r\n        console.log(result+\"Imhere!\")\r\n        return Object.values(result.myFriends);\r\n      }else if(source == \"friendrequest\"){\r\n        return Object.values(result.request);\r\n      }else if(source == \"post\"){\r\n        return Object.values(result.allPostItems);\r\n      }\r\n    \r\n    }\r\n    else{\r\n      return result;\r\n    }\r\n  \r\n}\r\nasync function updateDbTaskItem(uid,items){\r\n    //user to update the Task items to the uid given\r\n    var db = getFirestore();\r\n    console.log(items)\r\n    await setDoc(doc(db,\"tasklist\",uid),{\r\n      taskItem : items\r\n    });\r\n}\r\nasync function updateDbFriends(uid,items){\r\n    //update user's friend list\r\n    var db = getFirestore();\r\n    console.log(items)\r\n    await setDoc(doc(db,\"friends\",uid),{\r\n      myFriends : items\r\n    });\r\n}\r\nasync function sendDbFriendRequest(updatedRequest,friend){\r\n    var db = getFirestore();\r\n    console.log(friend);\r\n    await setDoc(doc(db,\"friendrequest\",friend.uid),{\r\n      request : updatedRequest\r\n    });\r\n}\r\nasync function updateDbPost(post){\r\n    var db = getFirestore();\r\n    console.log(post)\r\n    await setDoc(doc(db,\"post\",\"allpost\"),{\r\n      allPostItems : post\r\n    });\r\n    \r\n}\r\n</script>\r\n<style>\r\n#tasks{\r\n  background-image: linear-gradient(to right, #ffc107,#f5d77c);\r\n}\r\n#listfriend:hover{\r\n  background-color: aqua;\r\n}\r\n.button{\r\n  appearance: none;\r\n  outline: none;\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n\r\n  display: inline-block;\r\n  padding: 15px 25px;\r\n  background-image: linear-gradient(to right, #20c997,#16e6a7);\r\n  border-radius: 8px;\r\n  color: rgb(83, 72, 72);\r\n  font-size: 19px;\r\n  font-weight: 700;\r\n\r\n  box-shadow: 3px 3px rgba(0, 0, 0, 0.4);\r\n  transition: 0.4s ease-out;\r\n\r\n}\r\n.button:hover{\r\n  box-shadow: 6px 6px rgba(0, 0, 0, 0.6);\r\n}\r\n.modal-overlay{\r\n  position:fixed;\r\n  top:0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 98;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n}\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.5s;;\r\n}\r\n.fade-enter,\r\n.fade-leave-to{\r\n  opacity: 0;\r\n}\r\n\r\n.popUp{\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%,-50%);\r\n  z-index: 99;\r\n\r\n  width: 100%;\r\n  max-width: 400px;\r\n  background-color:#fff;\r\n  border-radius: 16px;\r\n\r\n  padding: 25px;\r\n}\r\n.editProfile:hover{\r\n  border: 3px solid greenyellow;\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n@media only screen and (max-width: 789px) {\r\n  #friendlisthide{\r\n    display: none;\r\n  }\r\n}\r\n#joke:hover{\r\n  font-size: 20px;\r\n}\r\n\r\n</style>"],"sourceRoot":"src/views"}]}
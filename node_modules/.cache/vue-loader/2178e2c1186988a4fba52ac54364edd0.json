{"remainingRequest":"/Users/tianfeng/Desktop/BackUp with listeners/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tianfeng/Desktop/BackUp with listeners/app/src/views/Messaging.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tianfeng/Desktop/BackUp with listeners/app/src/views/Messaging.vue","mtime":1636813154801},{"path":"/Users/tianfeng/Desktop/BackUp with listeners/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tianfeng/Desktop/BackUp with listeners/app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tianfeng/Desktop/BackUp with listeners/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tianfeng/Desktop/BackUp with listeners/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Messaging.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"Messaging.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div id=\"app\" class=\"container p-0\" style=\"width: 75%;\">\n\t\t<div class=\"card m-3\">\n\t\t\t<div class=\"row g-0\">\n\t\t\t\t<div class=\"chat-messages col-12 col-lg-5 col-xl-3 border bg-light\">\n\t\t\t\t\t<div class=\"px-4 d-none d-md-block\">\n\t\t\t\t\t\t<div class=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t<div class=\"flex-grow-1\">\n\t\t\t\t\t\t\t\t<p>Chats</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<a v-for=\"(friend,key) in myFriends\" v-bind:key=\"key\" class=\"list-group-item list-group-item-action border\">\n\t\t\t\t\t\t<div class=\"d-flex align-items-start\">\n\t\t\t\t\t\t\t<div class=\"flex-grow-1 ml-3 text-start\" @click=\"getMessage(friend);\">\n\t\t\t\t\t\t\t\t<img :src=\"friend.profilePic\" class=\"rounded-circle mr-1\" alt=\"Chris Wood\" width=\"40\" height=\"40\">{{friend.username}}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<hr class=\"d-block d-lg-none mt-1 mb-0\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-12 col-lg-7 col-xl-9 bg-light\" style=\"height:600px\">\n\t\t\t\t\t<div class=\"py-2 px-4 border-bottom d-none d-lg-block\">\n\t\t\t\t\t\t<div class=\"d-flex align-items-center py-1\">\n\t\t\t\t\t\t\t<div class=\"flex-grow-1 pl-3\">\n\t\t\t\t\t\t\t\t<strong v-if=\"currentChatFriend != null\">{{currentChatFriend.username}}</strong>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n                    <div id=\"chatHistory\" class=\"chat-messages\" style=\"height:500px\" @click=\"scrollToBottom\">\n                        <div v-for=\"(msg,key) in showMessage\" v-bind:key=\"key\" class=\"position-relative\">\n                            <div  class=\"chat-messages p-4\">\n                                <div v-if=\"msg.sender == user.uid \" class=\"chat-message-right pb-4\">\n                                    <div>\n                                        <img :src=\"user.profilePic\" class=\"rounded-circle mr-1\" alt=\"Chris Wood\" width=\"40\" height=\"40\">\n                                        <br>\n                                        <small class=\"text-muted small text-nowrap mt-2 text-end\">{{msg.date}}</small>\n                                    </div>\n                                    <div class=\"flex-shrink-1 bg-primary text-light rounded px-2 mr-3 w-50 h-50\" >\n                                        <div class=\" font-weight-bold text-end\">You</div>\n                                        <p class=\"text-start\">{{msg.message}}</p>\n                                    </div>\n                                    \n                                </div>\n                                <div v-else class=\"chat-message-left pb-4\">\n                                    <div>\n                                        <img :src=\"currentChatFriend.profilePic\" class=\"rounded-circle mr-1\" alt=\"Sharon Lessman\" width=\"40\" height=\"40\">\n                                        <br>\n                                        <small class=\"text-muted small text-nowrap mt-2 text-start\">{{msg.date}}</small>\n                                    </div>\n                                    <div class=\"flex-shrink-1 bg-success text-light rounded px-2 ml-3 w-50\">\n                                        <div class=\" font-weight-bold text-start\">{{currentChatFriend.username}}</div>\n                                        <p class=\"text-start\">{{msg.message}}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n\t\t\t\t</div>\n                <div v-if =\"currentChatFriend != null\" class=\"flex-grow-0 py-3 px-4 border-top bg-light\">\n                    <div class=\"input-group\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Type your message\" v-model=\"inputMessage\">\n                        <button v-if=\"inputMessage.trim() ==''\" class=\"btn btn-primary\" disabled>Send</button>\n                        <button v-else class=\"btn btn-primary\" @click=\"sendMessage()\">Send</button>\n                    </div>\n                </div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n<script>\nimport { getAuth , onAuthStateChanged} from \"firebase/auth\";\nimport { getFirestore, doc, getDocs, collection , onSnapshot, setDoc} from '@firebase/firestore';\nexport default{\n    name: 'app',\n    data(){\n        return{\n            user:{\n                uid : \"\",\n                email : \"\",\n                username : \"\",\n                profilePic : \"\",\n            },\n            myFriends : [],\n\n            inputMessage : \"\",\n            showMessage :[],\n            currentChatFriend : null,\n        }\n    },\n    methods:{\n        getMessage(friend){\n            this.showMessage =[];\n            this.currentChatFriend = friend;\n            var db = getFirestore();\n            console.log(this.user.uid)\n            onSnapshot(doc(db, \"messages\",this.user.uid+friend.uid),(doc)=>{\n                console.log(\"Current Data: \",doc.data());\n                if(doc.data()){\n                    this.showMessage = doc.data().chats;\n                    setTimeout(this.scrollToBottom,1000);\n                }\n            });\n            \n        },\n        sendMessage(){\n            //var db = getFirestore();\n            var newAllMessage =[];\n            \n            var newMsg = {\n                sender : this.user.uid,\n                message : this.inputMessage,\n                date : new Date().toDateString()\n            };\n            console.log(\"New message:\",newMsg)\n            var allMessage = getData(this.user.uid+this.currentChatFriend.uid,\"messages\");\n            allMessage.then((result)=>{\n                if(result != null){\n                    if(result.length != 0){\n                    result = Object.values(result);\n                    //console.log(result);\n                    for(let item of result){\n                        //console.log(item)\n                        var temp = {\n                            sender : item.sender,\n                            message : item.message,\n                            date : item.date\n                        }\n                        newAllMessage.push(temp);\n                    }\n                    }else{\n                        \n                        console.log(\"No chat\")\n                    }\n                    \n                }else{\n                    console.log(\"No chat list\");\n                }\n                newAllMessage.push(newMsg);\n                var update = sendMessage(this.currentChatFriend,this.user,newAllMessage);\n                update.then(()=>{\n                    console.log(\"chat updated\");\n                    var updateFriend = sendMessage(this.user,this.currentChatFriend,newAllMessage);\n                    updateFriend.then(()=>{\n                        console.log(\"friend chat updated\");\n                        this.inputMessage=\"\";\n                    })\n                });\n            });\n\n        },\n        scrollToBottom(){\n            var myDiv = document.getElementById(\"chatHistory\");\n            myDiv.scrollTop = myDiv.scrollHeight;\n        }\n    },\n    beforeCreate(){\n        const auth = getAuth();\n        onAuthStateChanged(auth, (user) => {\n        if (user) {\n            // User is signed in, see docs for a list of available properties\n            // https://firebase.google.com/docs/reference/js/firebase.User\n            console.log(user.uid);\n            getSearchUser(user.email).then((currentUser)=>{\n                this.user = currentUser;\n            });\n\n        //start getting friend list\n        var items = getData(user.uid,\"friends\");\n        items.then((result)=>{\n          if(result != null){\n            if(result.length != 0){\n              result = Object.values(result);\n              //console.log(result);\n              for(let item of result){\n                //console.log(item)\n                getSearchUser(item.email).then((user)=>{\n                    var temp = {\n                    uid : user.uid,\n                    email : user.email,\n                    username : user.username,\n                    profilePic : user.profilePic\n                    }\n                    this.myFriends.push(temp);\n                });\n              }\n            }else{\n              console.log(\"No Friends\")\n            }\n            \n          }else{\n            console.log(\"No Friendlist\");\n          }\n        }); //end getting friend list\n            // ...\n        }else{\n        console.log(\"No user\");\n        window.location.href=\"/login\";\n        }\n        });\n    }\n}\n// async function getUser(uid){\n//     var db = getFirestore();\n//     var docRef = doc(db,\"users\",uid);\n//     var docSnap = await getDoc(docRef);\n//     if(docSnap.exists()){\n//         return docSnap.data();\n//     }else{\n//         return false;\n//     }\n// }\nasync function  getData(uid,source){\n    //get all task that a uid have and return an array of taskitem objects\n    //if user yet to have any task, null will be returned \n    var db = getFirestore();\n    var result = null;\n    const querySnapshot = await getDocs(collection(db, source));\n    querySnapshot.forEach((doc) => {\n    //console.log(doc.data());\n    if(doc.id == uid){\n        result = doc.data();\n        console.log(result);\n    }\n\n    });\n    if(result != null && Object.values(result).length != 0){\n      if(source == \"friends\"){\n        return Object.values(result.myFriends);\n      }else if(source == \"messages\"){\n        return Object.values(result.chats);\n      }\n    }\n    else{\n      return result;\n    }\n  \n}\nasync function sendMessage(friend,user,message){\n    var db = getFirestore();\n    console.log(message)\n    await setDoc(doc(db,\"messages\",user.uid+friend.uid),{\n      chats : message\n    });\n}\nasync function getSearchUser(email){\n    var db = getFirestore();\n    var user\n    const querySnapshot = await getDocs(collection(db, \"users\"));\n    querySnapshot.forEach((doc) => {\n    //console.log(`${doc.id} => ${doc.data().email}`);\n    if(doc.data().email == email){\n      //console.log(doc.id);\n      user = {\n        uid : doc.id,\n        email : doc.data().email,\n        username : doc.data().username,\n        profilePic : doc.data().profilePic\n      }\n      //console.log(temp);\n      \n    }\n});\n    return user;\n}\n\n</script>\n<style>\n.chat-messages {\n    display: flex-box;\n    flex-direction: row-reverse;\n    max-height: 800px;\n    overflow: auto;\n}\n\n.chat-message-left,\n.chat-message-right {\n    display: flex;\n    flex-shrink: 0\n}\n\n.chat-message-left {\n    margin-right: auto\n}\n\n.chat-message-right {\n    flex-direction: row-reverse;\n    margin-left: auto\n}\n.py-3 {\n    padding-top: 1rem!important;\n    padding-bottom: 1rem!important;\n}\n.px-4 {\n    padding-right: 1.5rem!important;\n    padding-left: 1.5rem!important;\n}\n.flex-grow-0 {\n    flex-grow: 0!important;\n}\n.border-top {\n    border-top: 1px solid #dee2e6!important;\n}\n</style>"]}]}
{"remainingRequest":"/Users/tianfeng/Desktop/BackUp with listeners/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tianfeng/Desktop/BackUp with listeners/app/src/views/Community.vue?vue&type=template&id=2cf7da9f&","dependencies":[{"path":"/Users/tianfeng/Desktop/BackUp with listeners/app/src/views/Community.vue","mtime":1636813262785},{"path":"/Users/tianfeng/Desktop/BackUp with listeners/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tianfeng/Desktop/BackUp with listeners/app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/tianfeng/Desktop/BackUp with listeners/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tianfeng/Desktop/BackUp with listeners/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}